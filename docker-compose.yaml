version: '3'
services:
  dbauth:
    image: postgres:latest
    restart: always
    ports:
      - '5433:5432'
    environment:
      - POSTGRES_PASSWORD=example
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres']
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./auth-service/src/database/data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    restart: always
    ports:
      - '6380:6379'
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  auth:
    build: ./auth-service
    depends_on:
      - redis
    restart: always
    ports:
      - '1111:1111'

  auth-migration:
    build: ./auth-migrations
    depends_on:
      dbauth:
        condition: service_healthy

  dbbackend:
    image: postgres:latest
    restart: always
    ports:
      - '5434:5432'
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
    volumes:
      - ./backend-dday/src/database/data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  backend-migration:
    build: ./backend-migrations
    depends_on:
      dbbackend:
        condition: service_healthy
    environment:
      - NODE_ENV=docker

  backend:
    build: ./backend-dday
    depends_on:
      - backend-migration
    restart: always
    ports:
      - '2222:2222'
    volumes:
      - ./backend-dday/:/app/
    environment:
      - NODE_ENV=docker

  frontend:
    build: ./frontend-dday
    restart: always
    ports:
      - '3333:3333'
    volumes:
      - ./frontend-dday/:/app/
